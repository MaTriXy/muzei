/*
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.google.android.apps.muzei.wearable;

import android.net.Uri;
import android.os.Bundle;
import android.text.TextUtils;

import com.google.android.apps.muzei.room.Artwork;
import com.google.android.gms.wearable.DataMap;

/**
 * Helper class for transferring {@link Artwork} over to Wearable devices
 */
public class ArtworkTransfer {
    private static final String KEY_IMAGE_URI = "imageUri";
    private static final String KEY_TITLE = "title";
    private static final String KEY_BYLINE = "byline";
    private static final String KEY_ATTRIBUTION = "attribution";
    private static final String KEY_TOKEN = "token";

    /**
     * Serializes this artwork object to a {@link DataMap} representation.
     *
     * @return a serialized version of the artwork.
     * @see #fromDataMap
     */
    public static DataMap toDataMap(Artwork artwork) {
        Bundle bundle = new Bundle();
        bundle.putString(KEY_IMAGE_URI, (artwork.imageUri != null) ? artwork.imageUri.toString() : null);
        bundle.putString(KEY_TITLE, artwork.title);
        bundle.putString(KEY_BYLINE, artwork.byline);
        bundle.putString(KEY_ATTRIBUTION, artwork.attribution);
        bundle.putString(KEY_TOKEN, artwork.token);
        return DataMap.fromBundle(bundle);
    }

    /**
     * Deserializes an artwork object from a {@link DataMap}.
     *
     * @param dataMap DataMap generated by {@link #toDataMap} to deserialize.
     * @return the artwork from the given {@link DataMap}
     */
    public static Artwork fromDataMap(DataMap dataMap) {
        Bundle bundle = dataMap.toBundle();
        Artwork artwork = new Artwork();
        String imageUri = bundle.getString(KEY_IMAGE_URI);
        if (!TextUtils.isEmpty(imageUri)) {
            artwork.imageUri = Uri.parse(imageUri);
        }
        artwork.title = bundle.getString(KEY_TITLE);
        artwork.byline = bundle.getString(KEY_BYLINE);
        artwork.attribution = bundle.getString(KEY_ATTRIBUTION);
        artwork.token = bundle.getString(KEY_TOKEN);
        return artwork;
    }

    private ArtworkTransfer() {
    }
}
